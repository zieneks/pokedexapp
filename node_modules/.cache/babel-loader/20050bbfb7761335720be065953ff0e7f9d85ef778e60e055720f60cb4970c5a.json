{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTheme;\nvar _createPalette = _interopRequireDefault(require(\"./createPalette\"));\nvar _createThemeWithVars = _interopRequireDefault(require(\"./createThemeWithVars\"));\nvar _createThemeNoVars = _interopRequireDefault(require(\"./createThemeNoVars\"));\n// eslint-disable-next-line consistent-return\nfunction attachColorScheme(theme, scheme, colorScheme) {\n  if (!theme.colorSchemes) {\n    return undefined;\n  }\n  if (colorScheme) {\n    theme.colorSchemes[scheme] = {\n      ...(colorScheme !== true && colorScheme),\n      palette: (0, _createPalette.default)({\n        ...(colorScheme === true ? {} : colorScheme.palette),\n        mode: scheme\n      }) // cast type to skip module augmentation test\n    };\n  }\n}\n\n/**\n * Generate a theme base on the options received.\n * @param options Takes an incomplete theme object and adds the missing parts.\n * @param args Deep merge the arguments with the about to be returned theme.\n * @returns A complete, ready-to-use theme object.\n */\nfunction createTheme(options = {},\n// cast type to skip module augmentation test\n...args) {\n  const {\n    palette,\n    cssVariables = false,\n    colorSchemes: initialColorSchemes = !palette ? {\n      light: true\n    } : undefined,\n    defaultColorScheme: initialDefaultColorScheme = palette?.mode,\n    ...rest\n  } = options;\n  const defaultColorSchemeInput = initialDefaultColorScheme || 'light';\n  const defaultScheme = initialColorSchemes?.[defaultColorSchemeInput];\n  const colorSchemesInput = {\n    ...initialColorSchemes,\n    ...(palette ? {\n      [defaultColorSchemeInput]: {\n        ...(typeof defaultScheme !== 'boolean' && defaultScheme),\n        palette\n      }\n    } : undefined)\n  };\n  if (cssVariables === false) {\n    if (!('colorSchemes' in options)) {\n      // Behaves exactly as v5\n      return (0, _createThemeNoVars.default)(options, ...args);\n    }\n    let paletteOptions = palette;\n    if (!('palette' in options)) {\n      if (colorSchemesInput[defaultColorSchemeInput]) {\n        if (colorSchemesInput[defaultColorSchemeInput] !== true) {\n          paletteOptions = colorSchemesInput[defaultColorSchemeInput].palette;\n        } else if (defaultColorSchemeInput === 'dark') {\n          // @ts-ignore to prevent the module augmentation test from failing\n          paletteOptions = {\n            mode: 'dark'\n          };\n        }\n      }\n    }\n    const theme = (0, _createThemeNoVars.default)({\n      ...options,\n      palette: paletteOptions\n    }, ...args);\n    theme.defaultColorScheme = defaultColorSchemeInput;\n    theme.colorSchemes = colorSchemesInput;\n    if (theme.palette.mode === 'light') {\n      theme.colorSchemes.light = {\n        ...(colorSchemesInput.light !== true && colorSchemesInput.light),\n        palette: theme.palette\n      };\n      attachColorScheme(theme, 'dark', colorSchemesInput.dark);\n    }\n    if (theme.palette.mode === 'dark') {\n      theme.colorSchemes.dark = {\n        ...(colorSchemesInput.dark !== true && colorSchemesInput.dark),\n        palette: theme.palette\n      };\n      attachColorScheme(theme, 'light', colorSchemesInput.light);\n    }\n    return theme;\n  }\n  if (!palette && !('light' in colorSchemesInput) && defaultColorSchemeInput === 'light') {\n    colorSchemesInput.light = true;\n  }\n  return (0, _createThemeWithVars.default)({\n    ...rest,\n    colorSchemes: colorSchemesInput,\n    defaultColorScheme: defaultColorSchemeInput,\n    ...(typeof cssVariables !== 'boolean' && cssVariables)\n  }, ...args);\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","createTheme","_createPalette","_createThemeWithVars","_createThemeNoVars","attachColorScheme","theme","scheme","colorScheme","colorSchemes","undefined","palette","mode","options","args","cssVariables","initialColorSchemes","light","defaultColorScheme","initialDefaultColorScheme","rest","defaultColorSchemeInput","defaultScheme","colorSchemesInput","paletteOptions","dark"],"sources":["C:/Users/Marcin/Desktop/pokeap/pokeapi-react-app/node_modules/@mui/material/styles/createTheme.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTheme;\nvar _createPalette = _interopRequireDefault(require(\"./createPalette\"));\nvar _createThemeWithVars = _interopRequireDefault(require(\"./createThemeWithVars\"));\nvar _createThemeNoVars = _interopRequireDefault(require(\"./createThemeNoVars\"));\n// eslint-disable-next-line consistent-return\nfunction attachColorScheme(theme, scheme, colorScheme) {\n  if (!theme.colorSchemes) {\n    return undefined;\n  }\n  if (colorScheme) {\n    theme.colorSchemes[scheme] = {\n      ...(colorScheme !== true && colorScheme),\n      palette: (0, _createPalette.default)({\n        ...(colorScheme === true ? {} : colorScheme.palette),\n        mode: scheme\n      }) // cast type to skip module augmentation test\n    };\n  }\n}\n\n/**\n * Generate a theme base on the options received.\n * @param options Takes an incomplete theme object and adds the missing parts.\n * @param args Deep merge the arguments with the about to be returned theme.\n * @returns A complete, ready-to-use theme object.\n */\nfunction createTheme(options = {},\n// cast type to skip module augmentation test\n...args) {\n  const {\n    palette,\n    cssVariables = false,\n    colorSchemes: initialColorSchemes = !palette ? {\n      light: true\n    } : undefined,\n    defaultColorScheme: initialDefaultColorScheme = palette?.mode,\n    ...rest\n  } = options;\n  const defaultColorSchemeInput = initialDefaultColorScheme || 'light';\n  const defaultScheme = initialColorSchemes?.[defaultColorSchemeInput];\n  const colorSchemesInput = {\n    ...initialColorSchemes,\n    ...(palette ? {\n      [defaultColorSchemeInput]: {\n        ...(typeof defaultScheme !== 'boolean' && defaultScheme),\n        palette\n      }\n    } : undefined)\n  };\n  if (cssVariables === false) {\n    if (!('colorSchemes' in options)) {\n      // Behaves exactly as v5\n      return (0, _createThemeNoVars.default)(options, ...args);\n    }\n    let paletteOptions = palette;\n    if (!('palette' in options)) {\n      if (colorSchemesInput[defaultColorSchemeInput]) {\n        if (colorSchemesInput[defaultColorSchemeInput] !== true) {\n          paletteOptions = colorSchemesInput[defaultColorSchemeInput].palette;\n        } else if (defaultColorSchemeInput === 'dark') {\n          // @ts-ignore to prevent the module augmentation test from failing\n          paletteOptions = {\n            mode: 'dark'\n          };\n        }\n      }\n    }\n    const theme = (0, _createThemeNoVars.default)({\n      ...options,\n      palette: paletteOptions\n    }, ...args);\n    theme.defaultColorScheme = defaultColorSchemeInput;\n    theme.colorSchemes = colorSchemesInput;\n    if (theme.palette.mode === 'light') {\n      theme.colorSchemes.light = {\n        ...(colorSchemesInput.light !== true && colorSchemesInput.light),\n        palette: theme.palette\n      };\n      attachColorScheme(theme, 'dark', colorSchemesInput.dark);\n    }\n    if (theme.palette.mode === 'dark') {\n      theme.colorSchemes.dark = {\n        ...(colorSchemesInput.dark !== true && colorSchemesInput.dark),\n        palette: theme.palette\n      };\n      attachColorScheme(theme, 'light', colorSchemesInput.light);\n    }\n    return theme;\n  }\n  if (!palette && !('light' in colorSchemesInput) && defaultColorSchemeInput === 'light') {\n    colorSchemesInput.light = true;\n  }\n  return (0, _createThemeWithVars.default)({\n    ...rest,\n    colorSchemes: colorSchemesInput,\n    defaultColorScheme: defaultColorSchemeInput,\n    ...(typeof cssVariables !== 'boolean' && cssVariables)\n  }, ...args);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}