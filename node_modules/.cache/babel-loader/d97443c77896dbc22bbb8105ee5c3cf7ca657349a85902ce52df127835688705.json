{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcin\\\\Desktop\\\\pokeap\\\\pokeapi-react-app\\\\src\\\\pages\\\\Pokemon.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PokemonDetail from '../components/PokemonDetail';\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pokemon = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [pokemonData, setPokemonData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      try {\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch Pokémon data');\n        }\n        const data = await response.json();\n        setPokemonData(data);\n      } catch (err) {\n        if (err instanceof Error) {\n          setError(err.message);\n        } else {\n          setError(String(err));\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPokemon();\n  }, [name]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: pokemonData && /*#__PURE__*/_jsxDEV(PokemonDetail, {\n      pokemon: pokemonData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Pokemon, \"a5MCVo+V/SIzyxwLq4rxSP5BnSQ=\", false, function () {\n  return [useParams];\n});\n_c = Pokemon;\nexport default Pokemon;\nvar _c;\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PokemonDetail","Loader","jsxDEV","_jsxDEV","Pokemon","_s","name","pokemonData","setPokemonData","loading","setLoading","error","setError","fetchPokemon","response","fetch","ok","Error","data","json","err","message","String","fileName","_jsxFileName","lineNumber","columnNumber","children","pokemon","_c","$RefreshReg$"],"sources":["C:/Users/Marcin/Desktop/pokeap/pokeapi-react-app/src/pages/Pokemon.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PokemonDetail from '../components/PokemonDetail';\nimport Loader from '../components/Loader';\n\nconst Pokemon: React.FC = () => {\n    const { name } = useParams<{ name: string }>();\n    const [pokemonData, setPokemonData] = useState<any>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchPokemon = async () => {\n            try {\n                const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch Pokémon data');\n                }\n                const data = await response.json();\n                setPokemonData(data);\n            } catch (err) {\n                if (err instanceof Error) {\n                    setError(err.message);\n                } else {\n                    setError(String(err));\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchPokemon();\n    }, [name]);\n\n    if (loading) {\n        return <Loader />;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            {pokemonData && <PokemonDetail pokemon={pokemonData} />}\n        </div>\n    );\n};\n\nexport default Pokemon;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAK,CAAC,GAAGP,SAAS,CAAmB,CAAC;EAC9C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAM,IAAI,CAAC;EACzD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCT,IAAI,EAAE,CAAC;QACzE,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACnD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,cAAc,CAACU,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACV,IAAIA,GAAG,YAAYH,KAAK,EAAE;UACtBL,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;QACzB,CAAC,MAAM;UACHT,QAAQ,CAACU,MAAM,CAACF,GAAG,CAAC,CAAC;QACzB;MACJ,CAAC,SAAS;QACNV,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,IAAIG,OAAO,EAAE;IACT,oBAAON,OAAA,CAACF,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB;EAEA,IAAIf,KAAK,EAAE;IACP,oBAAOR,OAAA;MAAAwB,QAAA,GAAK,SAAO,EAAChB,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpC;EAEA,oBACIvB,OAAA;IAAAwB,QAAA,EACKpB,WAAW,iBAAIJ,OAAA,CAACH,aAAa;MAAC4B,OAAO,EAAErB;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAACrB,EAAA,CA1CID,OAAiB;EAAA,QACFL,SAAS;AAAA;AAAA8B,EAAA,GADxBzB,OAAiB;AA4CvB,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}