{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcin\\\\Desktop\\\\pokeap\\\\pokeapi-react-app\\\\src\\\\components\\\\PokemonCard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst typeColors = {\n  fire: '#F08030',\n  water: '#6890F0',\n  grass: '#78C850',\n  electric: '#F8D030',\n  psychic: '#F85888',\n  ice: '#98D8D8',\n  dragon: '#7038F8',\n  dark: '#705848',\n  fairy: '#EE99AC',\n  normal: '#A8A878',\n  fighting: '#C03028',\n  flying: '#A890F0',\n  poison: '#A040A0',\n  ground: '#E0C068',\n  rock: '#B8A038',\n  bug: '#A8B820',\n  ghost: '#705898',\n  steel: '#B8B8D0'\n};\nconst PokemonCard = ({\n  pokemon\n}) => {\n  _s();\n  const {\n    name,\n    sprites,\n    types\n  } = pokemon;\n  const navigate = useNavigate();\n  const handleClick = () => {\n    navigate(`/pokemon/${name}`);\n  };\n\n  // Pobierz pierwszy typ Pokemona\n  const mainType = types && types.length > 0 ? types[0].type.name : 'normal';\n  const bgColor = typeColors[mainType] || '#A8A878';\n  return /*#__PURE__*/_jsxDEV(Card, {\n    onClick: handleClick,\n    sx: {\n      cursor: 'pointer',\n      background: `linear-gradient(135deg, ${bgColor} 60%, #fff 100%)`,\n      color: '#222',\n      borderRadius: 4,\n      p: 2,\n      mb: 2,\n      textAlign: 'center',\n      boxShadow: 4,\n      transition: 'transform 0.2s, box-shadow 0.2s',\n      '&:hover': {\n        transform: 'scale(0.9)',\n        boxShadow: 8\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBottom: 12\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sprites.front_default,\n        alt: name,\n        style: {\n          width: '96px',\n          height: '96px',\n          background: '#f6f8fc',\n          borderRadius: '50%',\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\n          border: `2px solid ${bgColor}`,\n          objectFit: 'contain'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        p: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        sx: {\n          fontWeight: 700,\n          textTransform: 'capitalize',\n          mb: 1\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 8,\n          marginBottom: 6\n        },\n        children: types.map(t => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            background: typeColors[t.type.name] || '#A8A878',\n            color: '#fff',\n            borderRadius: 12,\n            padding: '2px 12px',\n            fontSize: '0.95rem',\n            fontWeight: 500,\n            boxShadow: '0 1px 4px rgba(0,0,0,0.07)',\n            textTransform: 'capitalize'\n          },\n          children: t.type.name\n        }, t.type.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(PokemonCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useNavigate","Card","CardContent","Typography","jsxDEV","_jsxDEV","typeColors","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","PokemonCard","pokemon","_s","name","sprites","types","navigate","handleClick","mainType","length","type","bgColor","onClick","sx","cursor","background","color","borderRadius","p","mb","textAlign","boxShadow","transition","transform","children","style","display","justifyContent","alignItems","marginBottom","src","front_default","alt","width","height","border","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","fontWeight","textTransform","gap","map","t","padding","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Marcin/Desktop/pokeap/pokeapi-react-app/src/components/PokemonCard.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Pokemon } from '../types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nconst typeColors: { [key: string]: string } = {\n    fire: '#F08030',\n    water: '#6890F0',\n    grass: '#78C850',\n    electric: '#F8D030',\n    psychic: '#F85888',\n    ice: '#98D8D8',\n    dragon: '#7038F8',\n    dark: '#705848',\n    fairy: '#EE99AC',\n    normal: '#A8A878',\n    fighting: '#C03028',\n    flying: '#A890F0',\n    poison: '#A040A0',\n    ground: '#E0C068',\n    rock: '#B8A038',\n    bug: '#A8B820',\n    ghost: '#705898',\n    steel: '#B8B8D0'\n};\n\ninterface PokemonCardProps {\n    pokemon: Pokemon;\n    onClick?: () => void;\n}\n\nconst PokemonCard: React.FC<PokemonCardProps> = ({ pokemon }) => {\n    const { name, sprites, types } = pokemon;\n    const navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate(`/pokemon/${name}`);\n    };\n\n    // Pobierz pierwszy typ Pokemona\n    const mainType = types && types.length > 0 ? types[0].type.name : 'normal';\n    const bgColor = typeColors[mainType] || '#A8A878';\n\n    return (\n        <Card\n            onClick={handleClick}\n            sx={{\n                cursor: 'pointer',\n                background: `linear-gradient(135deg, ${bgColor} 60%, #fff 100%)`,\n                color: '#222',\n                borderRadius: 4,\n                p: 2,\n                mb: 2,\n                textAlign: 'center',\n                boxShadow: 4,\n                transition: 'transform 0.2s, box-shadow 0.2s',\n                '&:hover': {\n                    transform: 'scale(0.9)',\n                    boxShadow: 8,\n                },\n            }}\n        >\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: 12 }}>\n                <img\n                    src={sprites.front_default}\n                    alt={name}\n                    style={{\n                        width: '96px',\n                        height: '96px',\n                        background: '#f6f8fc',\n                        borderRadius: '50%',\n                        boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\n                        border: `2px solid ${bgColor}`,\n                        objectFit: 'contain',\n                    }}\n                />\n            </div>\n            <CardContent sx={{ p: 0 }}>\n                <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 700, textTransform: 'capitalize', mb: 1 }}>\n                    {name}\n                </Typography>\n                <div style={{ display: 'flex', justifyContent: 'center', gap: 8, marginBottom: 6 }}>\n                    {types.map((t) => (\n                        <span\n                            key={t.type.name}\n                            style={{\n                                background: typeColors[t.type.name] || '#A8A878',\n                                color: '#fff',\n                                borderRadius: 12,\n                                padding: '2px 12px',\n                                fontSize: '0.95rem',\n                                fontWeight: 500,\n                                boxShadow: '0 1px 4px rgba(0,0,0,0.07)',\n                                textTransform: 'capitalize',\n                            }}\n                        >\n                            {t.type.name}\n                        </span>\n                    ))}\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default PokemonCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}