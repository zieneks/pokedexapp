{"ast":null,"code":"import React from'react';import{useNavigate}from'react-router-dom';import Card from'@mui/material/Card';import CardContent from'@mui/material/CardContent';import Typography from'@mui/material/Typography';import Box from'@mui/material/Box';import Chip from'@mui/material/Chip';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const typeColors={fire:'#F08030',water:'#6890F0',grass:'#78C850',electric:'#F8D030',psychic:'#F85888',ice:'#98D8D8',dragon:'#7038F8',dark:'#705848',fairy:'#EE99AC',normal:'#A8A878',fighting:'#C03028',flying:'#A890F0',poison:'#A040A0',ground:'#E0C068',rock:'#B8A038',bug:'#A8B820',ghost:'#705898',steel:'#B8B8D0'};const PokemonCard=_ref=>{let{pokemon}=_ref;const{name,sprites,types}=pokemon;const navigate=useNavigate();const handleClick=()=>{navigate(`/pokemon/${name}`);};const mainType=types&&types.length>0?types[0].type.name:'normal';const bgColor=typeColors[mainType]||'#A8A878';const cardBgColor=`${bgColor}33`;return/*#__PURE__*/_jsxs(Card,{onClick:handleClick,sx:{cursor:'pointer',background:`linear-gradient(135deg, ${cardBgColor} 60%, #fff 100%)`,color:'#222',borderRadius:4,p:2,mb:2,textAlign:'center',boxShadow:4,transition:'transform 0.2s, box-shadow 0.2s','&:hover':{transform:'scale(0.99)',boxShadow:8}},children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',mb:1},children:/*#__PURE__*/_jsx(Box,{component:\"img\",src:sprites.front_default,alt:name,sx:{width:96,height:96,background:'#f6f8fc',borderRadius:'50%',boxShadow:'0 2px 8px rgba(0,0,0,0.08)',border:`2px solid ${bgColor}`,objectFit:'contain'}})}),/*#__PURE__*/_jsxs(CardContent,{sx:{p:0},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",sx:{fontWeight:700,textTransform:'capitalize',mb:1},children:name}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',gap:1,mb:1},children:types.map(t=>/*#__PURE__*/_jsx(Chip,{label:t.type.name,sx:{background:typeColors[t.type.name]||'#A8A878',color:'#fff',fontWeight:500,textTransform:'capitalize'}},t.type.name))})]})]});};export default PokemonCard;","map":{"version":3,"names":["React","useNavigate","Card","CardContent","Typography","Box","Chip","jsx","_jsx","jsxs","_jsxs","typeColors","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","PokemonCard","_ref","pokemon","name","sprites","types","navigate","handleClick","mainType","length","type","bgColor","cardBgColor","onClick","sx","cursor","background","color","borderRadius","p","mb","textAlign","boxShadow","transition","transform","children","display","justifyContent","alignItems","component","src","front_default","alt","width","height","border","objectFit","variant","fontWeight","textTransform","gap","map","t","label"],"sources":["C:/Users/Marcin/Desktop/pokeap/pokeapi-react-app/src/components/PokemonCard.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Pokemon } from '../types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nconst typeColors: { [key: string]: string } = {\n    fire: '#F08030',\n    water: '#6890F0',\n    grass: '#78C850',\n    electric: '#F8D030',\n    psychic: '#F85888',\n    ice: '#98D8D8',\n    dragon: '#7038F8',\n    dark: '#705848',\n    fairy: '#EE99AC',\n    normal: '#A8A878',\n    fighting: '#C03028',\n    flying: '#A890F0',\n    poison: '#A040A0',\n    ground: '#E0C068',\n    rock: '#B8A038',\n    bug: '#A8B820',\n    ghost: '#705898',\n    steel: '#B8B8D0'\n};\n\ninterface PokemonCardProps {\n    pokemon: Pokemon;\n    onClick?: () => void;\n}\n\nconst PokemonCard: React.FC<PokemonCardProps> = ({ pokemon }) => {\n    const { name, sprites, types } = pokemon;\n    const navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate(`/pokemon/${name}`);\n    };\n\n    const mainType = types && types.length > 0 ? types[0].type.name : 'normal';\n    const bgColor = typeColors[mainType] || '#A8A878';\n    const cardBgColor = `${bgColor}33`;\n\n    return (\n        <Card\n            onClick={handleClick}\n            sx={{\n                cursor: 'pointer',\n                background: `linear-gradient(135deg, ${cardBgColor} 60%, #fff 100%)`,\n                color: '#222',\n                borderRadius: 4,\n                p: 2,\n                mb: 2,\n                textAlign: 'center',\n                boxShadow: 4,\n                transition: 'transform 0.2s, box-shadow 0.2s',\n                '&:hover': {\n                    transform: 'scale(0.99)',\n                    boxShadow: 8,\n                },\n            }}\n        >\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mb: 1 }}>\n                <Box\n                    component=\"img\"\n                    src={sprites.front_default}\n                    alt={name}\n                    sx={{\n                        width: 96,\n                        height: 96,\n                        background: '#f6f8fc',\n                        borderRadius: '50%',\n                        boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\n                        border: `2px solid ${bgColor}`,\n                        objectFit: 'contain',\n                    }}\n                />\n            </Box>\n            <CardContent sx={{ p: 0 }}>\n                <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 700, textTransform: 'capitalize', mb: 1 }}>\n                    {name}\n                </Typography>\n                <Box sx={{ display: 'flex', justifyContent: 'center', gap: 1, mb: 1 }}>\n                    {types.map((t) => (\n                        <Chip\n                            key={t.type.name}\n                            label={t.type.name}\n                            sx={{\n                                background: typeColors[t.type.name] || '#A8A878',\n                                color: '#fff',\n                                fontWeight: 500,\n                                textTransform: 'capitalize',\n                            }}\n                        />\n                    ))}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default PokemonCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}