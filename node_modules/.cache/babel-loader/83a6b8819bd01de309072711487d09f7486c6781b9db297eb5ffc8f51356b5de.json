{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcin\\\\Desktop\\\\pokeap\\\\pokeapi-react-app\\\\src\\\\components\\\\PokemonCard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst typeColors = {\n  fire: '#F08030',\n  water: '#6890F0',\n  grass: '#78C850',\n  electric: '#F8D030',\n  psychic: '#F85888',\n  ice: '#98D8D8',\n  dragon: '#7038F8',\n  dark: '#705848',\n  fairy: '#EE99AC',\n  normal: '#A8A878',\n  fighting: '#C03028',\n  flying: '#A890F0',\n  poison: '#A040A0',\n  ground: '#E0C068',\n  rock: '#B8A038',\n  bug: '#A8B820',\n  ghost: '#705898',\n  steel: '#B8B8D0'\n};\nconst PokemonCard = ({\n  pokemon\n}) => {\n  _s();\n  const {\n    name,\n    sprites,\n    types\n  } = pokemon;\n  const navigate = useNavigate();\n  const handleClick = () => {\n    navigate(`/pokemon/${name}`);\n  };\n\n  // Pobierz pierwszy typ Pokemona\n  const mainType = types && types.length > 0 ? types[0].type.name : 'normal';\n  const bgColor = typeColors[mainType] || '#A8A878';\n  return /*#__PURE__*/_jsxDEV(Card, {\n    onClick: handleClick,\n    sx: {\n      cursor: 'pointer',\n      backgroundColor: bgColor,\n      color: '#fff',\n      borderRadius: 2,\n      p: 2,\n      mb: 2,\n      textAlign: 'center',\n      transition: 'transform 0.2s',\n      '&:hover': {\n        transform: 'scale(1.05)'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: sprites.front_default,\n      alt: name,\n      style: {\n        width: '100px',\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"div\",\n        children: mainType.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(PokemonCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useNavigate","Card","CardContent","Typography","jsxDEV","_jsxDEV","typeColors","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","PokemonCard","pokemon","_s","name","sprites","types","navigate","handleClick","mainType","length","type","bgColor","onClick","sx","cursor","backgroundColor","color","borderRadius","p","mb","textAlign","transition","transform","children","src","front_default","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/Marcin/Desktop/pokeap/pokeapi-react-app/src/components/PokemonCard.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Pokemon } from '../types';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nconst typeColors: { [key: string]: string } = {\n    fire: '#F08030',\n    water: '#6890F0',\n    grass: '#78C850',\n    electric: '#F8D030',\n    psychic: '#F85888',\n    ice: '#98D8D8',\n    dragon: '#7038F8',\n    dark: '#705848',\n    fairy: '#EE99AC',\n    normal: '#A8A878',\n    fighting: '#C03028',\n    flying: '#A890F0',\n    poison: '#A040A0',\n    ground: '#E0C068',\n    rock: '#B8A038',\n    bug: '#A8B820',\n    ghost: '#705898',\n    steel: '#B8B8D0'\n};\n\ninterface PokemonCardProps {\n    pokemon: Pokemon;\n    onClick?: () => void;\n}\n\nconst PokemonCard: React.FC<PokemonCardProps> = ({ pokemon }) => {\n    const { name, sprites, types } = pokemon;\n    const navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate(`/pokemon/${name}`);\n    };\n\n    // Pobierz pierwszy typ Pokemona\n    const mainType = types && types.length > 0 ? types[0].type.name : 'normal';\n    const bgColor = typeColors[mainType] || '#A8A878';\n\n    return (\n        <Card\n            onClick={handleClick}\n            sx={{\n                cursor: 'pointer',\n                backgroundColor: bgColor,\n                color: '#fff',\n                borderRadius: 2,\n                p: 2,\n                mb: 2,\n                textAlign: 'center',\n                transition: 'transform 0.2s',\n                '&:hover': {\n                    transform: 'scale(1.05)',\n                },\n            }}\n        >\n            <img src={sprites.front_default} alt={name} style={{ width: '100px', height: '100px' }} />\n            <CardContent>\n                <Typography variant=\"h6\" component=\"div\">\n                    {name}\n                </Typography>\n                <Typography variant=\"body2\" component=\"div\">\n                    {mainType.toUpperCase()}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default PokemonCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}