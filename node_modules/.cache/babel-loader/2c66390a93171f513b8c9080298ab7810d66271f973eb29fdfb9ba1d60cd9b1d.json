{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cssContainerQueries;\nexports.getContainerQuery = getContainerQuery;\nexports.isCqShorthand = isCqShorthand;\nexports.sortContainerQueries = sortContainerQueries;\nvar _formatMuiErrorMessage = _interopRequireDefault(require(\"@mui/utils/formatMuiErrorMessage\"));\n/**\n * For using in `sx` prop to sort the breakpoint from low to high.\n * Note: this function does not work and will not support multiple units.\n *       e.g. input: { '@container (min-width:300px)': '1rem', '@container (min-width:40rem)': '2rem' }\n *            output: { '@container (min-width:40rem)': '2rem', '@container (min-width:300px)': '1rem' } // since 40 < 300 eventhough 40rem > 300px\n */\nfunction sortContainerQueries(theme, css) {\n  if (!theme.containerQueries) {\n    return css;\n  }\n  const sorted = Object.keys(css).filter(key => key.startsWith('@container')).sort((a, b) => {\n    const regex = /min-width:\\s*([0-9.]+)/;\n    return +(a.match(regex)?.[1] || 0) - +(b.match(regex)?.[1] || 0);\n  });\n  if (!sorted.length) {\n    return css;\n  }\n  return sorted.reduce((acc, key) => {\n    const value = css[key];\n    delete acc[key];\n    acc[key] = value;\n    return acc;\n  }, {\n    ...css\n  });\n}\nfunction isCqShorthand(breakpointKeys, value) {\n  return value === '@' || value.startsWith('@') && (breakpointKeys.some(key => value.startsWith(`@${key}`)) || !!value.match(/^@\\d/));\n}\nfunction getContainerQuery(theme, shorthand) {\n  const matches = shorthand.match(/^@([^/]+)?\\/?(.+)?$/);\n  if (!matches) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The provided shorthand ${`(${shorthand})`} is invalid. The format should be \\`@<breakpoint | number>\\` or \\`@<breakpoint | number>/<container>\\`.\\n` + 'For example, `@sm` or `@600` or `@40rem/sidebar`.' : (0, _formatMuiErrorMessage.default)(18, `(${shorthand})`));\n    }\n    return null;\n  }\n  const [, containerQuery, containerName] = matches;\n  const value = Number.isNaN(+containerQuery) ? containerQuery || 0 : +containerQuery;\n  return theme.containerQueries(containerName).up(value);\n}\nfunction cssContainerQueries(themeInput) {\n  const toContainerQuery = (mediaQuery, name) => mediaQuery.replace('@media', name ? `@container ${name}` : '@container');\n  function attachCq(node, name) {\n    node.up = (...args) => toContainerQuery(themeInput.breakpoints.up(...args), name);\n    node.down = (...args) => toContainerQuery(themeInput.breakpoints.down(...args), name);\n    node.between = (...args) => toContainerQuery(themeInput.breakpoints.between(...args), name);\n    node.only = (...args) => toContainerQuery(themeInput.breakpoints.only(...args), name);\n    node.not = (...args) => {\n      const result = toContainerQuery(themeInput.breakpoints.not(...args), name);\n      if (result.includes('not all and')) {\n        // `@container` does not work with `not all and`, so need to invert the logic\n        return result.replace('not all and ', '').replace('min-width:', 'width<').replace('max-width:', 'width>').replace('and', 'or');\n      }\n      return result;\n    };\n  }\n  const node = {};\n  const containerQueries = name => {\n    attachCq(node, name);\n    return node;\n  };\n  attachCq(containerQueries);\n  return {\n    ...themeInput,\n    containerQueries\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","cssContainerQueries","getContainerQuery","isCqShorthand","sortContainerQueries","_formatMuiErrorMessage","theme","css","containerQueries","sorted","keys","filter","key","startsWith","sort","a","b","regex","match","length","reduce","acc","breakpointKeys","some","shorthand","matches","process","env","NODE_ENV","Error","containerQuery","containerName","Number","isNaN","up","themeInput","toContainerQuery","mediaQuery","name","replace","attachCq","node","args","breakpoints","down","between","only","not","result","includes"],"sources":["C:/Users/Marcin/Desktop/pokeap/pokeapi-react-app/node_modules/@mui/system/cssContainerQueries/cssContainerQueries.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cssContainerQueries;\nexports.getContainerQuery = getContainerQuery;\nexports.isCqShorthand = isCqShorthand;\nexports.sortContainerQueries = sortContainerQueries;\nvar _formatMuiErrorMessage = _interopRequireDefault(require(\"@mui/utils/formatMuiErrorMessage\"));\n/**\n * For using in `sx` prop to sort the breakpoint from low to high.\n * Note: this function does not work and will not support multiple units.\n *       e.g. input: { '@container (min-width:300px)': '1rem', '@container (min-width:40rem)': '2rem' }\n *            output: { '@container (min-width:40rem)': '2rem', '@container (min-width:300px)': '1rem' } // since 40 < 300 eventhough 40rem > 300px\n */\nfunction sortContainerQueries(theme, css) {\n  if (!theme.containerQueries) {\n    return css;\n  }\n  const sorted = Object.keys(css).filter(key => key.startsWith('@container')).sort((a, b) => {\n    const regex = /min-width:\\s*([0-9.]+)/;\n    return +(a.match(regex)?.[1] || 0) - +(b.match(regex)?.[1] || 0);\n  });\n  if (!sorted.length) {\n    return css;\n  }\n  return sorted.reduce((acc, key) => {\n    const value = css[key];\n    delete acc[key];\n    acc[key] = value;\n    return acc;\n  }, {\n    ...css\n  });\n}\nfunction isCqShorthand(breakpointKeys, value) {\n  return value === '@' || value.startsWith('@') && (breakpointKeys.some(key => value.startsWith(`@${key}`)) || !!value.match(/^@\\d/));\n}\nfunction getContainerQuery(theme, shorthand) {\n  const matches = shorthand.match(/^@([^/]+)?\\/?(.+)?$/);\n  if (!matches) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The provided shorthand ${`(${shorthand})`} is invalid. The format should be \\`@<breakpoint | number>\\` or \\`@<breakpoint | number>/<container>\\`.\\n` + 'For example, `@sm` or `@600` or `@40rem/sidebar`.' : (0, _formatMuiErrorMessage.default)(18, `(${shorthand})`));\n    }\n    return null;\n  }\n  const [, containerQuery, containerName] = matches;\n  const value = Number.isNaN(+containerQuery) ? containerQuery || 0 : +containerQuery;\n  return theme.containerQueries(containerName).up(value);\n}\nfunction cssContainerQueries(themeInput) {\n  const toContainerQuery = (mediaQuery, name) => mediaQuery.replace('@media', name ? `@container ${name}` : '@container');\n  function attachCq(node, name) {\n    node.up = (...args) => toContainerQuery(themeInput.breakpoints.up(...args), name);\n    node.down = (...args) => toContainerQuery(themeInput.breakpoints.down(...args), name);\n    node.between = (...args) => toContainerQuery(themeInput.breakpoints.between(...args), name);\n    node.only = (...args) => toContainerQuery(themeInput.breakpoints.only(...args), name);\n    node.not = (...args) => {\n      const result = toContainerQuery(themeInput.breakpoints.not(...args), name);\n      if (result.includes('not all and')) {\n        // `@container` does not work with `not all and`, so need to invert the logic\n        return result.replace('not all and ', '').replace('min-width:', 'width<').replace('max-width:', 'width>').replace('and', 'or');\n      }\n      return result;\n    };\n  }\n  const node = {};\n  const containerQueries = name => {\n    attachCq(node, name);\n    return node;\n  };\n  attachCq(containerQueries);\n  return {\n    ...themeInput,\n    containerQueries\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}